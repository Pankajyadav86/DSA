class Solution {
        public ListNode reverse(ListNode head){
            ListNode prev=null;
            ListNode curr=head;
            while(curr!=null){
                ListNode next=curr.next;
                curr.next=prev;
                prev=curr;
                curr=next;
            }
            return prev;
        }
        public ListNode findMiddle(ListNode head){
            ListNode hare=head;
            ListNode turtle=head;
            while(hare.next !=null && hare.next.next !=null){
                hare=hare.next.next;
                turtle=turtle.next;
            }
            return turtle;
        }
        public boolean isPalindrome(ListNode head) {
            if(head==null || head.next==null){
                return true;
            }
            ListNode middle=findMiddle(head);
            ListNode secondhalf=reverse(middle.next);
            ListNode firsthalfstart=head;
            while(secondhalf!=null){
                if(firsthalfstart.val!=secondhalf.val){
                    return false;
                }
                firsthalfstart=firsthalfstart.next;
                secondhalf=secondhalf.next;
                }
                return true;
            }
        }
 
